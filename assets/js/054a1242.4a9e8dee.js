(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{124:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return E}));var r=t(0),o=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=o.a.createContext({}),p=function(e){var n=o.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return o.a.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},f=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,a=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=p(t),f=r,E=u["".concat(a,".").concat(f)]||u[f]||d[f]||c;return t?o.a.createElement(E,s(s({ref:n},i),{},{components:t})):o.a.createElement(E,s({ref:n},i))}));function E(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,a=new Array(c);a[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var i=2;i<c;i++)a[i]=t[i];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},73:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(3),o=t(7),c=(t(0),t(124)),a={id:"colors",title:"Colors",custom_edit_url:"https://github.com/lucasgmagalhaes/corde/blob/master/docs/Colors.mdx"},s={unversionedId:"colors",id:"colors",isDocsHomePage:!1,title:"Colors",description:"Colors can be used to define a color of a role. Corde provide enums with some colors",source:"@site/../docs/Colors.mdx",slug:"/colors",permalink:"/docs/colors",editUrl:"https://github.com/lucasgmagalhaes/corde/blob/master/docs/Colors.mdx",version:"current",lastUpdatedBy:"Corde deployment script",lastUpdatedAt:1617134573,formattedLastUpdatedAt:"3/30/2021",sidebar:"docs",previous:{title:"Utilities",permalink:"/docs/utilities"},next:{title:"Permissions",permalink:"/docs/permissions"}},l=[],i={toc:l};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Colors can be used to define a color of a role. Corde provide enums with some colors\nthat can be used to help development:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-typescript"},'enum ColorsHex {\n  DEFAULT = 0x000000,\n  WHITE = 0xffffff,\n  AQUA = 0x1abc9c,\n  GREEN = 0x2ecc71,\n  BLUE = 0x3498db,\n  YELLOW = 0xffff00,\n  PURPLE = 0x9b59b6,\n  LUMINOUS_VIVID_PINK = 0xe91e63,\n  GOLD = 0xf1c40f,\n  ORANGE = 0xe67e22,\n  RED = 0xe74c3c,\n  GREY = 0x95a5a6,\n  NAVY = 0x34495e,\n  DARK_AQUA = 0x11806a,\n  DARK_GREEN = 0x1f8b4c,\n  DARK_BLUE = 0x206694,\n  DARK_PURPLE = 0x71368a,\n  DARK_VIVID_PINK = 0xad1457,\n  DARK_GOLD = 0xc27c0e,\n  DARK_ORANGE = 0xa84300,\n  DARK_RED = 0x992d22,\n  DARK_GREY = 0x979c9f,\n  DARKER_GREY = 0x7f8c8d,\n  LIGHT_GREY = 0xbcc0c0,\n  DARK_NAVY = 0x2c3e50,\n  BLURPLE = 0x7289da,\n  GREYPLE = 0x99aab5,\n  DARK_BUT_NOT_BLACK = 0x2c2f33,\n  NOT_QUITE_BLACK = 0x23272a,\n}\n\nenum Colors {\n  DEFAULT = "#000000",\n  WHITE = "#FFFFFF",\n  AQUA = "#1ABC9C",\n  GREEN = "#2ECC71",\n  BLUE = "#3498DB",\n  PURPLE = "#9B59B6",\n  GOLD = "#E91E63",\n  ORANGE = "#E67E22",\n  RED = "#E74C3C",\n  GREY = "#95A5A6",\n  DARKER_GREY = "#7F8C8D",\n  NAVY = "#34495E",\n  DARK_AQUA = "#11806A",\n  DARK_GREEN = "#1F8B4C",\n  DARK_BLUE = "#206694",\n  DARK_PURPLE = "#71368A",\n  DARK_GOLD = "#C27C0E",\n  DARK_ORANGE = "#A84300",\n  DARK_RED = "#992D22",\n  DARK_GREY = "#7F8C8D",\n  LIGHT_GREY = "#BCC0C0",\n  DARK_NAVY = "#2C3E50",\n  LUMINOUS_VIVID_PINK = "#E91E63",\n  DARK_VIVID_PINK = "#AD1457",\n}\n')),Object(c.b)("p",null,"These values can be accessed with"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-typescript"},'import { Colors, ColorsHex } from "corde";\n')))}p.isMDXComponent=!0}}]);