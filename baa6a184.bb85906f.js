(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{105:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),u=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=u(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),b=r,m=d["".concat(s,".").concat(b)]||d[b]||p[b]||o;return n?i.a.createElement(m,a(a({ref:t},l),{},{components:n})):i.a.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=b;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var l=2;l<o;l++)s[l]=n[l];return i.a.createElement.apply(null,s)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return a})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),i=n(7),o=(n(0),n(105)),s={id:"utilities",title:"Utilities",custom_edit_url:"https://github.com/lucasgmagalhaes/corde/blob/master/website/docs/utilities.md"},a={unversionedId:"utilities",id:"utilities",isDocsHomePage:!1,title:"Utilities",description:"Utility functions are used to complement the comunication between corde and Discord, it provide just a few functions to iterate tests with Discord using corde's bot or your self bot.",source:"@site/docs\\Utilities.mdx",slug:"/utilities",permalink:"/docs/utilities",editUrl:"https://github.com/lucasgmagalhaes/corde/blob/master/website/docs/utilities.md",version:"current",lastUpdatedBy:"Lucas Gomes",lastUpdatedAt:1612057489,sidebar:"someSidebar",previous:{title:"Hooks",permalink:"/docs/hooks"},next:{title:"Colors",permalink:"/docs/colors"}},c=[{value:"sendMessage(string | number | MessageEmbed)",id:"sendmessagestring--number--messageembed",children:[]},{value:"withClient(Client)",id:"withclientclient",children:[]}],l={toc:c};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Utility functions are used to complement the comunication between corde and Discord, it provide just a few functions to iterate tests with Discord using corde's bot or your self bot."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/utilities#sendMessage"}),"sendMessage"))),Object(o.b)("h3",{id:"sendmessagestring--number--messageembed"},"sendMessage(string | number | MessageEmbed)"),Object(o.b)("p",null,"Use ",Object(o.b)("inlineCode",{parentName:"p"},"sendMessage")," to send a message as ",Object(o.b)("strong",{parentName:"p"},"corde bot"),". This is usefull if you do not want to depend directly of ",Object(o.b)("inlineCode",{parentName:"p"},"expect")," to wait corde to send a message."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'const message = await corde.sendMessage("Hi Frodo!");\n')),Object(o.b)("h3",{id:"withclientclient"},"withClient(Client)"),Object(o.b)("p",null,"Use ",Object(o.b)("inlineCode",{parentName:"p"},"withClient")," if you want"))}u.isMDXComponent=!0}}]);